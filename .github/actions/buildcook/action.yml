name: Build cook unreal package

inputs:
  app_version:
    description: 'The version of the app to be built'
    type: string
    required: true
    default: 'v0.1'
  environment:
    description: 'The deployment environment'
    required: true
    type: string
    default: 'DEV'
  build_config:
    description: 'Configuration to use'
    type: string
    required: true
    default: 'Development'
  platform:
    description: 'Platform to build for'
    type: string
    required: false
    default: 'Linux'
  maps:
    description: 'Maps to be packaged'
    type: string
    required: false
  archive:
    description: 'Whether to archive'
    type: boolean
    required: true
    default: true
  archive_path:
    description: 'Archive Path'
    type: string
    required: false
    default: '/home/ubuntu/ActionsOutput/'
    
runs:
  using: 'composite'

  steps:
    - name: Build cook and package unreal project
      shell: bash

      env: 
        m_runUatPath: "/home/ubuntu/UE/Linux_Unreal_Engine_5.4.1/Engine/Build/BatchFiles/RunUAT.sh"
        m_buildConfig: ${{ inputs.build_config }} #"Development"
        m_platform: ${{ inputs.platform }} #"linux"
        m_archive: ${{ inputs.archive }} #"true"
        m_app_version: ${{ inputs.app_version }}
        m_archivePath: ${{ inputs.archive_path }}
        m_maps: ${{ inputs.maps }} #"false"
      run: |
        echo 'Project path on runner is: '${{ github.workspace }}

        if [ "${m_archivePath:-1}"!="/"];then
          m_archivePath="${{ inputs.archive_path }}/"
        fi

        echo 'Package archive path is: '${{ env.m_archivePath }}

        # Make sure there is only one uproject file in the project.
        uprojectCount=$(find .. -type f -name "*.uproject" | wc -l) 
        if [ "$uprojectCount" != 1 ]; then
          echo "::error::$uprojectCount uproejct files exist.Please make sure there is only one uproject file in the project!"
          exit 3
        fi

        # Search for *.uproject file in the upper folder and change the relative path into absolute
        uprojectPath=$(find .. -type f -name "*.uproject" | xargs -0 -I {} readlink -f {})

        if [[ ${{ inputs.archive }} = true]]; then
          archiveArg="-archive -archivedirectory=${{ inputs.archive_path }}"
        else
          archiveArg=""
        fi

        #archiveArg=$( [ "${{ inputs.archive }}" == true ] && echo "-archive -archivedirectory=${{ inputs.archive_path }}" || "")
        if [[ -n "${{ inputs.maps }}" ]]; then
          mapsArg="-map=${{ inputs.maps }}"
        else
          mapsArg=""
        fi

        command="$m_runUatPath BuildCookRun -project=$uprojectPath -clientconfig=${{ inputs.build_config }} -platform=${{ inputs.platform }} $mapsArg -clean -cook -stage -pak -package $archiveArg -encryptinifiles -noP4 -build -unattended -utf8output"

        echo -e "buildcookrun commandline is:\n"$command
        sh -c "$command"

            # Check archive path exist
            if [ ! -d "${{ inputs.archive_path }}" ]; then
              echo "Error: Package failed, archive is not exist"
              exit 2
            fi

          # Rename the archive to add the version number
          for dir in ${{ inputs.archive_path }}*
          do
            new_name=$dir"_"${{ inputs.app_version }}
            mv "$dir" "$new_name"
          done