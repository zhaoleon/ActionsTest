name: "NCar-Unreal-Builder"

on:
  push:
  workflow_dispatch:
    inputs:
      app_version:
        description: "The version of the app to be built"
        required: true
        default: "0.1.2400.1"
      environment:
        description: "The deployment environment"
        required: true
        type: choice
        options:
          - "DEV"
          - "UAT"
          - "PROD"
        default: "DEV"
      changelog:
        description: "Built app changelog"
        required: true
        default: "Test"
      upload_artifacts:
        description: "Enable upload of the app artifact to Github"
        type: boolean
        default: false
      build_config:
        description: "Configuration to use"
        type: choice
        required: true
        options:
          - "Development"
          - "Debug"
          - "Shipping"
        default: "Development"
      platform:
        description: "Platform to build for"
        type: choice
        required: false
        options:
          - "Win64"
          - "Linux"
        default: "Linux"
      maps:
        description: "Maps to be packaged"
        required: false
      archive:
        description: 'Whether to archive'
        type: choice
        required: false
        options:
          - "true"
          - "false"
        default: 'false'
      archive_path:
        description: 'Archive Path'
        required: false
        default: "$HOME/ActionsOutput/"

run-name: ${{ format('App build | {0} | {1}', inputs.app_version, inputs.environment) }}

jobs:
  build-app:
    runs-on: [self-hosted, CICDForUnreal, Linux]
      
    steps:
      # Clean the workspace by deleting the old version
      - run: |
          echo "Deleting existing workspace: ${{ github.workspace }}"
          rm -rf ${{ github.workspace }}

      - uses: actions/checkout@v4
        with: 
          lfs: true

      - run: |
          Scripts/buildcookrun.sh \
          ${{ inputs.build_config }} ${{ inputs.platform }} \
          ${{inputs.archive}} ${{ inputs.app_version }} \
          ${{ inputs.archive_path }} ${{ inputs.maps}} 
  deploy:
    runs-on: [self-hosted, CICDForUnreal, Linux]
    name: Create Release
    needs: build-app
    env: 
      ArchiveName: NCarApp_${{ github.run_number }}.zip
    steps:
      - name: Zip archive
        run: |
          zip -rqu ${{env.ArchiveName}} ${{ inputs.archive_path }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}.${{ github.run_number }}
          body: |
            Changes in the release
            - First change
            - Second change
          draft: false
          prerelease: true
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{env.ArchiveName}}
          asset_name: ${{env.ArchiveName}}
          asset_content_type: application/zip




